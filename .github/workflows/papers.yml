name: Daily Papers

permissions:
  issues: write

on:
 schedule: 
   - cron: '*/5 * * * *'

jobs:
  papers:
    runs-on: ubuntu-latest
    steps:
      - name: Generate papers
        id: paper
        run: |
          array=$(curl -H 'Content-Type: application/json' \
                       -d '{"contents":[{"parts":[{"text":"https://arxiv.org/search/cs?query=llm&searchtype=all&abstracts=show&order=-announced_date_first&size=50 请输入里面前10篇论文的 id，输出为 json 数组"}]}]}' \
                       -X POST "https://palm-proxy2-kappa.vercel.app/v1beta/models/gemini-pro:generateContent?key=${{ secrets.GEMINI_TOKEN }}" \
                       | jq -r '.candidates[0].content.parts[0].text' \
                       | sed -e '1d;$d')
          END=10
          prompt="请合并以下文本，用markdown语法的表格输出："
          for ((i=0;i<END;i++)); do
            echo $i
            paper_id=$(echo $array | jq -r ".[$i]")
            res=$(curl -H 'Content-Type: application/json' \
                       -d '{"contents":[{"parts":[{"text":"https://arxiv.org/abs/$paper_id 请输出这篇论文的标题，摘要和 pdf 地址"}]}]}' \
                       -X POST "https://palm-proxy2-kappa.vercel.app/v1beta/models/gemini-pro:generateContent?key=${{ secrets.GEMINI_TOKEN }}" \
                       | jq -r '.candidates[0].content.parts[0].text')
            prompt+="第${i+1}段：$res；"
            sleep 1
          done

          echo $prompt
          
          title=`date "+%Y-%m-%d"`
          echo "TITLE=$title" >> "$GITHUB_OUTPUT"

          body=$(curl -H 'Content-Type: application/json' \
                     -d '{"contents":[{"parts":[{"text":"$prompt"}]}]}' \
                     -X POST "https://palm-proxy2-kappa.vercel.app/v1beta/models/gemini-pro:generateContent?key=${{ secrets.GEMINI_TOKEN }}" \
                     | jq -r '.candidates[0].content.parts[0].text')
          echo "BODY=$title" >> "$GITHUB_OUTPUT"
      - name: create an issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Papers ${{ steps.paper.outputs.TITLE }}
          body: ${{ steps.paper.outputs.BODY }}
          
